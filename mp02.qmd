---
title: "Mini Project 2"
author: "Gisell Bennett"
date: "2025-03-20"
output:
  html_document:
    theme: cosmo
    code_folding: hide
---

```{r setup, include=FALSE}
# Set global chunk options for collapsible code
knitr::opts_chunk$set(echo = TRUE, collapse = TRUE, message = FALSE, warning = FALSE)
```

# Introduction

Public transit systems play a crucial role in reducing urban congestion and providing a more sustainable alternative to personal vehicles. However, the environmental efficiency of these systems varies significantly based on ridership levels, travel distances, and the emissions generated by different modes of transportation. This project aims to assess the environmental efficiency of U.S. public transit systems by analyzing key factors such as ridership, average travel distances, and associated emissions.

Using data from sources such as the National Transit Database (NTD) and the U.S. Energy Information Administration (EIA) State Electricity Profiles, this study will explore how many riders are served by different transit agencies, how far an average rider travels, and the effective emissions produced by each transit mode. By quantifying these factors, this analysis will provide insights into the sustainability of various transit systems and identify potential areas for improvement in reducing transit-related emissions.

# Data Acquisition

#### State Electricity Profiles

The first step is to acquire relevant datasets. The EIA State Electricity Profile is used to estimate the environmental impact of electricity consumption in transit systems.

```{r, echo=FALSE}
ensure_package <- function(pkg) {
    pkg <- as.character(substitute(pkg))
    options(repos = c(CRAN = "https://cloud.r-project.org"))
    if (!require(pkg, character.only = TRUE)) {
        install.packages(pkg, repos = "https://cloud.r-project.org")
    }
    stopifnot(require(pkg, character.only = TRUE))
}

# Install required packages if they're not already installed
ensure_package("dplyr")
ensure_package("httr2")
ensure_package("rvest")
ensure_package("datasets")
ensure_package("purrr")
ensure_package("DT")
ensure_package("stringr")  # Ensure stringr is installed
```

```{r get_eia_data, echo=FALSE}
get_eia_sep <- function(state, abbr) {
    state_formatted <- str_to_lower(state) |> str_replace_all("\\s", "")

    dir_name <- file.path("data", "mp02")
    file_name <- file.path(dir_name, state_formatted)

    dir.create(dir_name, showWarnings = FALSE, recursive = TRUE)

    if (!file.exists(file_name)) {
        BASE_URL <- "https://www.eia.gov"
        REQUEST <- httr2::request(BASE_URL) |> 
            httr2::req_url_path("electricity", "state", state_formatted)

        RESPONSE <- httr2::req_perform(REQUEST)

        resp_check_status(RESPONSE)

        writeLines(httr2::resp_body_string(RESPONSE), file_name)
    }

    TABLE <- rvest::read_html(file_name) |> 
        rvest::html_element("table") |> 
        rvest::html_table() |>
        dplyr::mutate(Item = stringr::str_to_lower(Item))

    if ("U.S. rank" %in% colnames(TABLE)) {
        TABLE <- TABLE |> dplyr::rename(Rank = `U.S. rank`)
    }

    CO2_MWh <- TABLE |> 
        dplyr::filter(Item == "carbon dioxide (lbs/mwh)") |>
        dplyr::pull(Value) |> 
        stringr::str_replace_all(",", "") |>
        as.numeric()

    PRIMARY <- TABLE |> 
        dplyr::filter(Item == "primary energy source") |> 
        dplyr::pull(Rank)

    RATE <- TABLE |>
        dplyr::filter(Item == "average retail price (cents/kwh)") |>
        dplyr::pull(Value) |>
        as.numeric()

    GENERATION_MWh <- TABLE |>
        dplyr::filter(Item == "net generation (megawatthours)") |>
        dplyr::pull(Value) |>
        stringr::str_replace_all(",", "") |>
        as.numeric()

    data.frame(CO2_MWh = CO2_MWh, 
               primary_source = PRIMARY,
               electricity_price_MWh = RATE * 10, # / 100 cents to dollars & * 1000 kWh to MWH 
               generation_MWh = GENERATION_MWh, 
               state = state, 
               abbreviation = abbr)
}

EIA_SEP_REPORT <- purrr::map2(state.name, state.abb, get_eia_sep) |> 
    purrr::list_rbind()
```

```{r}
#| echo: false
# Display summary of electricity data for analysis
ensure_package(scales)
ensure_package(DT)

EIA_SEP_REPORT |> 
    select(-abbreviation) |>
    arrange(desc(CO2_MWh)) |>
    mutate(CO2_MWh = number(CO2_MWh, big.mark=","), 
           electricity_price_MWh = dollar(electricity_price_MWh), 
           generation_MWh = number(generation_MWh, big.mark=",")) |>
    rename(`Pounds of CO2 Emitted per MWh of Electricity Produced`=CO2_MWh, 
           `Primary Source of Electricity Generation`=primary_source, 
           `Average Retail Price for 1000 kWh`=electricity_price_MWh, 
           `Total Generation Capacity (MWh)`= generation_MWh, 
           State=state) |>
    datatable()
```

### CO2 Emissions per MWh by State
This bar plot illustrates the CO2 emissions per megawatt-hour (MWh) by state, helping to identify regions with higher emissions relative to energy production.

```{r echo=FALSE, comment=''}
# Bar plot of CO2 emissions per MWh
if (!require("ggplot2")) install.packages("ggplot2")
if (!require("dplyr")) install.packages("dplyr")
library(ggplot2)
library(dplyr)

EIA_SEP_REPORT_top10 <- EIA_SEP_REPORT %>%
  arrange(desc(CO2_MWh)) %>%
  head(10)

ggplot(EIA_SEP_REPORT_top10, aes(x = reorder(state, CO2_MWh), y = CO2_MWh, fill = state)) +
  geom_bar(stat = "identity") +
  labs(
    title = "Top 10 States by CO2 Emissions per MWh",
    x = "State",
    y = "CO2 Emissions (kg/MWh)"
  ) +
  theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 10)) + 
  theme_minimal() +
  coord_flip()  
```


We've collected data on effective emissions per MWh², electricity prices, and total statewide generation capacity. This will help us compare emissions across different public transit modes. Before exploring the National Transit Database for details on various transit agencies, let's first analyze the SEP data and address a few key questions.

#### Key Questions

1.  Which state has the most expensive retail electricity?

```{r, comment=''}
#| echo: false
most_expensive_state <- EIA_SEP_REPORT |> 
  arrange(desc(electricity_price_MWh)) |> 
  slice(1) |> 
  select(state, electricity_price_MWh)

print(most_expensive_state)
```

2.  Which state has the ‘dirtiest’ electricity mix?

```{r, comment=''}
#| echo: false
dirtiest_state <- EIA_SEP_REPORT |> 
  arrange(desc(CO2_MWh)) |> 
  slice(1) |> 
  select(state, CO2_MWh)

print(dirtiest_state)
```

3.  On average, how many pounds of CO2 are emitted per MWh of electricity produced in the US? (Note that you will need to use a suitably weighted average here.)

```{r, comment=''}
#| echo: false
weighted_avg_co2 <- sum(EIA_SEP_REPORT$CO2_MWh * EIA_SEP_REPORT$generation_MWh) / sum(EIA_SEP_REPORT$generation_MWh)

print(weighted_avg_co2)
```

4.  What is the rarest primary energy source in the US? What is the associated cost of electricity and where is it used?

```{r, comment=''}
#| echo: false
rarest_source <- EIA_SEP_REPORT |> 
  count(primary_source, sort = TRUE) |> 
  slice_tail(n = 1) |> 
  pull(primary_source)

rarest_source_data <- EIA_SEP_REPORT |> 
  filter(primary_source == rarest_source) |> 
  select(state, primary_source, electricity_price_MWh)

print(rarest_source_data)
```

5.  Texas, has a reputation as being the home of “dirty fossil fuels” while NY has a reputation as a leader in clean energy. How many times cleaner is NY’s energy mix than that of Texas?

```{r, comment=''}
#| echo: false
ny_co2 <- EIA_SEP_REPORT |> filter(state == "New York") |> pull(CO2_MWh)
tx_co2 <- EIA_SEP_REPORT |> filter(state == "Texas") |> pull(CO2_MWh)

cleanliness_ratio <- tx_co2 / ny_co2

print(cleanliness_ratio)
```

#### 2023 Annual Database Energy Consumption

Next, we will load, clean, and transform the 2023 Energy Consumption dataset by removing unnecessary columns, converting non-numeric values to numeric, grouping by key attributes, and filtering out irrelevant rows. A random sample of the cleaned data will then be displayed.

```{r}
#| echo: false
ensure_package(readxl)
# Create 'data/mp02' directory if not already present
DATA_DIR <- file.path("data", "mp02")
dir.create(DATA_DIR, showWarnings=FALSE, recursive=TRUE)

NTD_ENERGY_FILE <- file.path(DATA_DIR, "2023_ntd_energy.xlsx")

if(!file.exists(NTD_ENERGY_FILE)){
    DS <- download.file("https://www.transit.dot.gov/sites/fta.dot.gov/files/2024-10/2023%20Energy%20Consumption.xlsx", 
                  destfile=NTD_ENERGY_FILE, 
                  method="curl")
    
    if(DS | (file.info(NTD_ENERGY_FILE)$size == 0)){
        cat("I was unable to download the NTD Energy File. Please try again.\n")
        stop("Download failed")
    }
}

NTD_ENERGY_RAW <- read_xlsx(NTD_ENERGY_FILE)
```

```{r}
#| echo: false
ensure_package(tidyr)
to_numeric_fill_0 <- function(x){
    x <- if_else(x == "-", NA, x)
    replace_na(as.numeric(x), 0)
}

NTD_ENERGY <- NTD_ENERGY_RAW |> 
    select(-c(`Reporter Type`, 
              `Reporting Module`, 
              `Other Fuel`, 
              `Other Fuel Description`)) |>
    mutate(across(-c(`Agency Name`, 
                     `Mode`,
                     `TOS`), 
                  to_numeric_fill_0)) |>
    group_by(`NTD ID`, `Mode`, `Agency Name`) |>
    summarize(across(where(is.numeric), sum), 
              .groups = "keep") |>
    mutate(ENERGY = sum(c_across(c(where(is.numeric))))) |>
    filter(ENERGY > 0) |>
    select(-ENERGY) |>
    ungroup()

# Display 10 random rows
slice_sample(NTD_ENERGY , n=10)
```

```{r}
#| echo: false
# Find unique Mode codes
distinct_modes <- NTD_ENERGY %>%
  distinct(Mode)

# Recode the Mode column
NTD_ENERGY <- NTD_ENERGY |>
  mutate(Mode = case_when(
      Mode == "HR" ~ "Heavy Rail", 
      Mode == "LR" ~ "Light Rail", 
      Mode == "CR" ~ "Commuter Rail",
      Mode == "BU" ~ "Bus", 
      Mode == "FT" ~ "Ferry",
      Mode == "HD" ~ "Hybrid Bus",
      Mode == "EB" ~ "Electric Bus",
      Mode == "TB" ~ "Trolley Bus",
      Mode == "OT" ~ "Other", 
      TRUE ~ "Unknown"
  ))

```

#### 2023 Annual Database Service by Agency

Lastly, we will download the 2023 Service by Agency report, which contains data on the characteristics of typical passenger trips for each transit service. This data will help us analyze key factors such as ridership, service frequency, and route details for various transit agencies.

```{r}
#| echo: false
ensure_package(readr)

NTD_SERVICE_FILE <- file.path(DATA_DIR, "2023_service.csv")

if(!file.exists(NTD_SERVICE_FILE)){
    DS <- download.file("https://data.transportation.gov/resource/6y83-7vuw.csv", 
                  destfile=NTD_SERVICE_FILE, 
                  method="curl")
    
    if(DS | (file.info(NTD_SERVICE_FILE)$size == 0)){
        cat("I was unable to download the NTD Service File. Please try again.\n")
        stop("Download failed")
    }
}

NTD_SERVICE_RAW <- read_csv(NTD_SERVICE_FILE)
```

```{r}
# Clean up the data 
NTD_SERVICE <- NTD_SERVICE_RAW |>
    mutate(`NTD ID` = as.numeric(`_5_digit_ntd_id`)) |> 
    rename(Agency = agency, 
           City   = max_city, 
           State  = max_state,
           UPT    = sum_unlinked_passenger_trips_upt, 
           MILES  = sum_passenger_miles) |>
    select(matches("^[A-Z]", ignore.case=FALSE)) |>
    filter(MILES > 0)
```

#### Key Questions 

1.Which transit service has the most UPT annually?

```{r}
#| echo: false
most_upt_service <- aggregate(UPT ~ Agency, data = NTD_SERVICE, FUN = sum, na.rm = TRUE)
most_upt_service <- most_upt_service[order(-most_upt_service$UPT), ]
most_upt_service <- most_upt_service[1, ]

# Print the transit service with the most UPT
print(most_upt_service)
```

2.What is the average trip length of a trip on MTA NYC?

```{r}
#| echo: false
mta_nyc_data <- NTD_SERVICE[grepl("MTA NYC", NTD_SERVICE$City), ]
mta_nyc_avg_trip_length <- sum(mta_nyc_data$MILES, na.rm = TRUE) / sum(mta_nyc_data$UPT, na.rm = TRUE)

# Print the average trip length for MTA NYC
print(mta_nyc_avg_trip_length)
```
3.Which transit service in NYC has the longest average trip length?

```{r}
#| echo: false
nyc_data <- NTD_SERVICE[grepl("New York City", NTD_SERVICE$City) | grepl("Brooklyn", NTD_SERVICE$City), ]
nyc_avg_trip_length <- aggregate(cbind(MILES, UPT) ~ Agency, data = nyc_data, FUN = sum, na.rm = TRUE)
nyc_avg_trip_length$avg_trip_length <- nyc_avg_trip_length$MILES / nyc_avg_trip_length$UPT
nyc_avg_trip_length <- nyc_avg_trip_length[order(-nyc_avg_trip_length$avg_trip_length), ]
nyc_avg_trip_length <- nyc_avg_trip_length[1, ]

# Print the service with the longest average trip length
print(nyc_avg_trip_length)

```

4. Which state has the fewest total miles travelled by public transit?

```{r}
#| echo: false
state_total_miles <- aggregate(MILES ~ State, data = NTD_SERVICE, FUN = sum, na.rm = TRUE)
state_fewest_miles <- state_total_miles[order(state_total_miles$MILES), ]
state_fewest_miles <- state_fewest_miles[1, ]

# Print the state with the fewest miles traveled
print(state_fewest_miles)
```

5. Are all states represented in this data? If no, which ones are missing? 

```{r}
# List of all US states
all_states <- state.name

# States in the data
states_in_data <- unique(NTD_SERVICE$State)

# Missing states
missing_states <- setdiff(all_states, states_in_data)

# Print missing states
print(missing_states)
```

## Analysis 

This analysis focuses on determining which transit agencies across the United States are the "greenest" based on their emissions, energy use, and passenger service metrics. The goal is to assess the environmental efficiency of these agencies and recognize those that are reducing their carbon footprint in relation to transit usage.

Calculating Emissions

```{r}

```

```{r}

```